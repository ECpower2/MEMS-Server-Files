function [X,Y,Z,sigma1,x,y,U,V,W,u,v,q,r,cxx,cyy,cxy,c1,c2,gamma_c,Xp,Yp,Zp] = importDIC(filename)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [X,Y,Z,SIGMA1,X,Y,U,V,W,U,V,Q,R,CXX,CYY,CXY,C1,C2,GAMMA_C,XP,YP,ZP] =
%   IMPORTDIC(FILENAME) Reads data from text file FILENAME for the default
%   selection.
%
% Example:
%   [X,Y,Z,sigma1,x,y,U,V,W,u,v,q,r,cxx,cyy,cxy,c1,c2,gamma_c,Xp,Yp,Zp] = importDIC('baseline-000_0.csv');
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/05/26 13:34:47

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
X = dataArray{:, 1};
Y = dataArray{:, 2};
Z = dataArray{:, 3};
sigma1 = dataArray{:, 4};
x = dataArray{:, 5};
y = dataArray{:, 6};
U = dataArray{:, 7};
V = dataArray{:, 8};
W = dataArray{:, 9};
u = dataArray{:, 10};
v = dataArray{:, 11};
q = dataArray{:, 12};
r = dataArray{:, 13};
cxx = dataArray{:, 14};
cyy = dataArray{:, 15};
cxy = dataArray{:, 16};
c1 = dataArray{:, 17};
c2 = dataArray{:, 18};
gamma_c = dataArray{:, 19};
Xp = dataArray{:, 20};
Yp = dataArray{:, 21};
Zp = dataArray{:, 22};


